<?php
/**
 * @file
 * A module that allows users to create and order custom business cards.
 */

/**
 * Implements hook_help().
 */
function card_creator_help($path, $arg) {
  switch ($path) {
    case 'admin/help#card_creator':{
      $ret_val = '<h3>' . t('About') . '</h3>';
      $ret_val .= '<p>' . t('Allows customers to create and order custom business cards.') . '</p>';
      return $ret_val;
      break;
    }
  }
}

/**
 * Implements hook_permission().
 */
function card_creator_permission() {
  return array(
    'administer card creator' => array(
      'title' => t('Administer Card Creator'),
      'description' => t('Perform administrative task on Card Creator functionality.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function card_creator_menu() {
  $items = array();

  // Business card creation page
  $items['card-creator'] = array(
    'description' => 'Customize your business card.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('card_creator_form'),
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_commerce_product_type_info().
 * Create a new product type for Business Cards.
 */
function card_creator_commerce_product_type_info() {
  return array(
    'business_card' => array(
      'type' => 'business_card',
      'name' => t('Business Card'),
      'description' => t('A customized business card'),
      'help' => '',
    ),
  );
}

/**
 * Implements hook_form().
 */
function card_creator_form($form, &$form_state) {
  $form = array();

  // Attach css, js, and library files
  $form['#attached']['css'] = array(
    drupal_get_path('module', 'card_creator') . '/css/styles.css',
  );

  // Input Fields
  $form['company_name'] = array(
    '#type' => 'textfield',
    '#id' => 'companyName',
    '#size' => 25,
    '#attributes' => array(
      'placeholder' => t('Company Name'),
    ),
    '#prefix' => '<div id="container"><div id="leftColumn"><div id="cardInfo">',
  );
  $form['name'] = array(
    '#type' => 'textfield',
    '#id' => 'name',
    '#size' => 25,
    '#attributes' => array(
      'placeholder' => t('Name'),
    ),
  );
  $form['title'] = array(
    '#type' => 'textfield',
    '#id' => 'title',
    '#size' => 25,
    '#attributes' => array(
      'placeholder' => t('Title'),
    ),
  );
  $form['address'] = array(
    '#type' => 'textfield',
    '#id' => 'address',
    '#size' => 25,
    '#attributes' => array(
      'placeholder' => t('Address'),
    ),
  );
  $form['city_state_zip'] = array(
    '#type' => 'textfield',
    '#id' => 'cityStateZip',
    '#size' => 25,
    '#attributes' => array(
      'placeholder' => t('City, State Zip'),
    ),
  );
  $form['line1'] = array(
    '#type' => 'textfield',
    '#id' => 'line1',
    '#size' => 25,
    '#attributes' => array(
      'placeholder' => t('Line 1'),
    ),
  );
  $form['line2'] = array(
    '#type' => 'textfield',
    '#id' => 'line2',
    '#size' => 25,
    '#attributes' => array(
      'placeholder' => t('Line 2'),
    ),
  );
  $form['line3'] = array(
    '#type' => 'textfield',
    '#id' => 'line3',
    '#size' => 25,
    '#attributes' => array(
      'placeholder' => ('Line 3'),
    ),
  );
  $form['line4'] = array(
    '#type' => 'textfield',
    '#id' => 'line4',
    '#size' => 25,
    '#attributes' => array(
      'placeholder' => ('Line 4'),
    ),
    '#suffix' => '</div>',
  );

  // Clipart Color Label
  $form['clipart_color'] = array(
    '#markup' => '<div><label id="clipartColor">' . t('Clipart Color') . '</label></div>',
  );

  // Font Family Select List
  $form['font_family'] = array(
    '#markup' => '<select id="docFontFamily" title="Change the font for ALL fields."><option value="helvetica">Helvetica</option><option value="futura">Futura</option><option value="garamond">Garamond</option><option value="frutiger">Frutiger</option></select>',
    '#suffix' => '</div>',
  );

  // Preview svg
  $form['preview'] = array(
    '#markup' => '<svg id="preview"></svg>',
    '#prefix' => '<div id="rightColumn">',
  );

  // Price
  $form['current_price'] = array(
    '#markup' => t('Price = $19.99'),
    '#prefix' => '<div id="currentPrice">',
    '#suffix' => '</div>',
  );

  // Add To Card
  $form['add_to_cart'] = array(
    '#type' => 'submit',
    '#value' => t('Add to cart'),
    '#prefix' => '<div id="add_to_cart">',
    '#suffix' => '</div></div>',
  );

  // Clipart selection
  $form['select_clipart'] = array(
    '#markup' => '<h4>' . t('Select Clipart') . '</h4>',
    '#prefix' => '<div id="bottom"><div id="bottomLeftCol"><div id="bottomLeftColUpper">',
    '#suffix' => '</div>',
  );
  $form['vehicles'] = array(
    '#markup' => '<button type="button" id="vehicles">Vehicles</button>',
    '#prefix' => '<div id="bottomLeftColLower"><div id="bottomLeftColLowerLeft">',
  );
  $form['manufacturer'] = array(
    '#markup' => '<button type="button" id="manufacturer">Manufactuer Logo\'s</button>',
  );
  $form['animals'] = array(
    '#markup' => '<button type="button" id="animals">Animals</button>',
    '#suffix' => '</div>',
  );

  // Clipart svg dispaly
  $form['clipart'] = array(
    '#markup' => '<svg id="clipart"></svg>',
    '#prefix' => '<div id="bottomLeftColLowerRight">',
    '#suffix' => '</div></div></div>',
  );

  // Ink Color Selection
  $form['select_ink_color'] = array(
    '#markup' => '<h4>' . t('Select Ink Color') . '</h4>',
    '#prefix' => '<div id="bottomRightCol"><div id="bottomRightMid"><div id="bottomRightMidUpper">',
    '#suffix' => '</div>',
  );

  // One Color Options
  $form['black'] = array(
    '#markup' => '<button type="button">Black</button>',
    '#prefix' => '<div id="bottomRightMidLower"><div id="oneColor">',
  );
  $form['red'] = array(
    '#markup' => '<button type="button">Red</button>',
  );
  $form['blue'] = array(
    '#markup' => '<button type="button">Blue</button>',
  );
  $form['maroon'] = array(
    '#markup' => '<button type="button">Maroon</button>',
  );
  $form['green'] = array(
    '#markup' => '<button type="button">Green</button>',
  );
  $form['brown'] = array(
    '#markup' => '<button type="button">Brown</button>',
    '#suffix' => '</div>',
  );

  // Two Color Options
  $form['red_blue'] = array(
    '#markup' => '<button type="button">Red/Blue</button>',
    '#prefix' => '<div id="twoColors">',
  );
  $form['red_black'] = array(
    '#markup' => '<button type="button">Red/Black</button>',
  );
  $form['blue_black'] = array(
    '#markup' => '<button type="button">Blue/Black</button>',
  );
  $form['maroon_black'] = array(
    '#markup' => '<button type="button">Maroon/Black</button>',
  );
  $form['green_black'] = array(
    '#markup' => '<button type="button">Green/Black</button>',
  );
  $form['brown_black'] = array(
    '#markup' => '<button type="button">Brown/Black</button>',
    '#suffix' => '</div></div></div>'
  );

  // Template Selection
  $form['select_template'] = array(
    '#markup' => '<h4>' . t('Select A Template') . '</h4>',
    '#prefix' => '<div id="bottomRightSide"><div id="bottomRightSideUpper">',
    '#suffix' => '</div>',
  );

  // Templates svg display
  $form['templates'] = array(
    '#markup' => '<svg id="templates"></svg>',
    '#prefix' => '<div id="bottomRightSideLower">',
    '#suffix' => '</div></div></div></div>',
  );

  $form['#attached']['js'][] = array(
    'data' => drupal_get_path('module', 'card_creator') . '/libraries/snap.svg.js',
  );

  $form['#attached']['js'][] = array(
    'data' => drupal_get_path('module', 'card_creator') . '/js/card_creator.js',
  );

  return $form;
}

/**
 * Validates Card Creator Form.
 */

function card_creator_form_validate($form, &$form_state) {
}

/**
 * Process a validated Card Creator Form submission.
 */

function card_creator_form_submit($form, &$form_state) {
  global $user;
  $company_name = $form_state['values']['company_name'];
  $name = $form_state['values']['name'];
  $title = $form_state['values']['title'];
  $address = $form_state['values']['address'];
  $city_state_zip = $form_state['values']['city_state_zip'];
  $line1 = $form_state['values']['line1'];
  $line2 = $form_state['values']['line2'];
  $line3 = $form_state['values']['line3'];
  $line4 = $form_state['values']['line4'];
  $product_title = $company_name . '-' . $name;

  // Use the information submitted to create a new business card product
  $wrapper = entity_metadata_wrapper('commerce_product', commerce_product_new('business_card'));
  $wrapper->title = $product_title;
  $wrapper->sku = $product_title;
  $wrapper->commerce_price->amount = 500;    // Price in minors units 500 = 5$
  $wrapper->commerce_price->currency_code = 'USD';  // Use your currency... obviously :-)

  // You can assign other fields with the same construction: $wrapper->field_name = ...
  $wrapper->field_company_name = $company_name;
  $wrapper->field_name = $name;
  $wrapper->field_title = $title;
  $wrapper->field_address = $address;
  $wrapper->field_city_state_zip = $city_state_zip;
  $wrapper->field_line_1 = $line1;
  $wrapper->field_line_2 = $line2;
  $wrapper->field_line_3 = $line3;
  $wrapper->field_line_4 = $line4;

  $wrapper->save();
}


